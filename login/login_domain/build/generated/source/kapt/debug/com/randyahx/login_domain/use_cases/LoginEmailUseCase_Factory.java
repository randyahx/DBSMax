// Generated by Dagger (https://dagger.dev).
package com.randyahx.login_domain.use_cases;

import com.randyahx.login_domain.repository.LoginRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginEmailUseCase_Factory implements Factory<LoginEmailUseCase> {
  private final Provider<LoginRepository> repositoryProvider;

  public LoginEmailUseCase_Factory(Provider<LoginRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public LoginEmailUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static LoginEmailUseCase_Factory create(Provider<LoginRepository> repositoryProvider) {
    return new LoginEmailUseCase_Factory(repositoryProvider);
  }

  public static LoginEmailUseCase newInstance(LoginRepository repository) {
    return new LoginEmailUseCase(repository);
  }
}
