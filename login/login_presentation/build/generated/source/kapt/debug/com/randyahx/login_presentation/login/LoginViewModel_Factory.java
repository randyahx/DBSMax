// Generated by Dagger (https://dagger.dev).
package com.randyahx.login_presentation.login;

import androidx.lifecycle.SavedStateHandle;
import com.randyahx.login_domain.use_cases.LoginEmailUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<LoginEmailUseCase> loginEmailUseCaseProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public LoginViewModel_Factory(Provider<LoginEmailUseCase> loginEmailUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.loginEmailUseCaseProvider = loginEmailUseCaseProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(loginEmailUseCaseProvider.get(), savedStateHandleProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<LoginEmailUseCase> loginEmailUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new LoginViewModel_Factory(loginEmailUseCaseProvider, savedStateHandleProvider);
  }

  public static LoginViewModel newInstance(LoginEmailUseCase loginEmailUseCase,
      SavedStateHandle savedStateHandle) {
    return new LoginViewModel(loginEmailUseCase, savedStateHandle);
  }
}
