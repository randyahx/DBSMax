// Generated by Dagger (https://dagger.dev).
package com.randyahx.onboarding_presentation.welcome.api_testing;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideApiFactory implements Factory<LoginApi> {
  private final Provider<Retrofit.Builder> builderProvider;

  public AppModule_ProvideApiFactory(Provider<Retrofit.Builder> builderProvider) {
    this.builderProvider = builderProvider;
  }

  @Override
  public LoginApi get() {
    return provideApi(builderProvider.get());
  }

  public static AppModule_ProvideApiFactory create(Provider<Retrofit.Builder> builderProvider) {
    return new AppModule_ProvideApiFactory(builderProvider);
  }

  public static LoginApi provideApi(Retrofit.Builder builder) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideApi(builder));
  }
}
